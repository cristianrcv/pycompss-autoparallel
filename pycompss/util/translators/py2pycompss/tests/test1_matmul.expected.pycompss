import math

from pycompss.api.api import compss_barrier, compss_wait_on, compss_open
from pycompss.api.task import task
from pycompss.api.parameter import *

@task()
def S1(c, i, j, a, k, b):
    c[i][j] += a[i][k]*b[k][j];

@parallel()                                                                                                                                                                                                                                                                    
def matmul(m_size, n_size, k_size, b_size, debug):
    # Initialize
    a = initialize(m_size, n_size, b_size, True)
    b = initialize(n_size, k_size, b_size, True)
    c = initialize(m_size, k_size, b_size, False)

    # Debug
    if debug:
        print "Matrix A:"
        print a
        print "Matrix B:"
        print b
        print "Matrix C:"
        print c

    # Perform computation
    # c = a*b
    # Start of CLooG code
    if ((k_size >= 1) and (m_size >= 1) and (n_size >= 1)):
        lbp=0
        ubp=k_size-1
        # parallel for PRIVATE(lbv,ubv,t2,t3) REDUCTION()
        for t1 in range(lbp, ubp):
            lbp=0
            ubp=n_size-1
            for t2 in range(0, n_size-1):
                lbv=0
                ubv=m_size-1
                # parallel for PRIVATE() REDUCTION()
                for t3 in range(lbv, ubv):
                    S1(t3,t1,t2)
    # End of CLooG code

    # Debug
    if debug:
        print "Matrix C:"
        print c

    # Result
    return c
