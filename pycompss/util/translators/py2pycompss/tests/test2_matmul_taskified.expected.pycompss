# [COMPSs Autoparallel] Begin Autogenerated code
import math

from pycompss.api.api import compss_barrier, compss_wait_on, compss_open
from pycompss.api.task import task
from pycompss.api.parameter import *


@task(lbv=IN, ubv=IN, var1=IN, var2=IN, var3=INOUT)
def LT2(lbv, ubv, var1, var2, var3):
    for t3 in range(lbv, ubv + 1):
        S1(var1[t3], var2[t3], var3[t3])


def S1(var2, var3, var1):
    var1 += var2 * var3


def matmul(m_size, n_size, k_size, b_size, debug):
    a = initialize(m_size, n_size, b_size, True)
    b = initialize(n_size, k_size, b_size, True)
    c = initialize(m_size, k_size, b_size, False)
    if debug:
        print 'Matrix A:'
        print a
        print 'Matrix B:'
        print b
        print 'Matrix C:'
        print c
    if k_size >= 1 and m_size >= 1 and n_size >= 1:
        lbp = 1
        ubp = k_size - 1 + 1
        for t1 in range(lbp, ubp + 1):
            lbp = 1
            ubp = n_size - 1 + 1
            for t2 in range(1, n_size - 1 + 1):
                lbv = 1
                ubv = m_size - 1 + 1
                LT2(lbv, ubv, [a[t3 - 1][t2 - 1] for t3 in range(lbv, ubv +
                    1)], [b[t2 - 1][t1 - 1] for t3 in range(lbv, ubv + 1)],
                    [c[t3][t1] for t3 in range(lbv, ubv + 1)])
    compss_barrier()
    if debug:
        print 'Matrix C:'
        print c
    return c

# [COMPSs Autoparallel] End Autogenerated code
