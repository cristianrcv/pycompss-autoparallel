# [File generated by the OpenScop Library 0.9.1]

<OpenScop>

# =============================================== Global
# Language
p

# Context
CONTEXT
0 4 0 0 0 2

# Parameters are provided
1
<strings>
T N
</strings>

# Number of statements
1

# =============================================== Statement 1
# Number of relations describing the statement:
12

# ----------------------------------------------  1.1 Domain
DOMAIN
8 7 3 0 0 2
# e/i|  t    i    j |  T    N |  1  
   1    1    0    0    0    0    0    ## t >= 0
   1   -1    0    0    1    0   -1    ## -t+T-1 >= 0
   1    0    0    0    1    0   -1    ## T-1 >= 0
   1    0    1    0    0    0   -1    ## i-1 >= 0
   1    0   -1    0    0    1   -2    ## -i+N-2 >= 0
   1    0    0    0    0    1   -3    ## N-3 >= 0
   1    0    0    1    0    0   -1    ## j-1 >= 0
   1    0    0   -1    0    1   -2    ## -j+N-2 >= 0

# ----------------------------------------------  1.2 Scattering
SCATTERING
7 14 7 3 0 2
# e/i| c1   c2   c3   c4   c5   c6   c7 |  t    i    j |  T    N |  1  
   0   -1    0    0    0    0    0    0    0    0    0    0    0    0    ## c1 == 0
   0    0   -1    0    0    0    0    0    1    0    0    0    0    0    ## c2 == t
   0    0    0   -1    0    0    0    0    0    0    0    0    0    0    ## c3 == 0
   0    0    0    0   -1    0    0    0    0    1    0    0    0    0    ## c4 == i
   0    0    0    0    0   -1    0    0    0    0    0    0    0    0    ## c5 == 0
   0    0    0    0    0    0   -1    0    0    0    1    0    0    0    ## c6 == j
   0    0    0    0    0    0    0   -1    0    0    0    0    0    0    ## c7 == 0

# ----------------------------------------------  1.3 Access
WRITE
3 10 3 3 0 2
# e/i| Arr  [1]  [2]|  t    i    j |  T    N |  1  
   0   -1    0    0    0    0    0    0    0    6    ## Arr == a
   0    0   -1    0    0    1    0    0    0    0    ## [1] == i
   0    0    0   -1    0    0    1    0    0    0    ## [2] == j

READ
3 10 3 3 0 2
# e/i| Arr  [1]  [2]|  t    i    j |  T    N |  1  
   0   -1    0    0    0    0    0    0    0    6    ## Arr == a
   0    0   -1    0    0    1    0    0    0   -1    ## [1] == i-1
   0    0    0   -1    0    0    1    0    0   -1    ## [2] == j-1

READ
3 10 3 3 0 2
# e/i| Arr  [1]  [2]|  t    i    j |  T    N |  1  
   0   -1    0    0    0    0    0    0    0    6    ## Arr == a
   0    0   -1    0    0    1    0    0    0   -1    ## [1] == i-1
   0    0    0   -1    0    0    1    0    0    0    ## [2] == j

READ
3 10 3 3 0 2
# e/i| Arr  [1]  [2]|  t    i    j |  T    N |  1  
   0   -1    0    0    0    0    0    0    0    6    ## Arr == a
   0    0   -1    0    0    1    0    0    0   -1    ## [1] == i-1
   0    0    0   -1    0    0    1    0    0    1    ## [2] == j+1

READ
3 10 3 3 0 2
# e/i| Arr  [1]  [2]|  t    i    j |  T    N |  1  
   0   -1    0    0    0    0    0    0    0    6    ## Arr == a
   0    0   -1    0    0    1    0    0    0    0    ## [1] == i
   0    0    0   -1    0    0    1    0    0   -1    ## [2] == j-1

READ
3 10 3 3 0 2
# e/i| Arr  [1]  [2]|  t    i    j |  T    N |  1  
   0   -1    0    0    0    0    0    0    0    6    ## Arr == a
   0    0   -1    0    0    1    0    0    0    0    ## [1] == i
   0    0    0   -1    0    0    1    0    0    0    ## [2] == j

READ
3 10 3 3 0 2
# e/i| Arr  [1]  [2]|  t    i    j |  T    N |  1  
   0   -1    0    0    0    0    0    0    0    6    ## Arr == a
   0    0   -1    0    0    1    0    0    0    0    ## [1] == i
   0    0    0   -1    0    0    1    0    0    1    ## [2] == j+1

READ
3 10 3 3 0 2
# e/i| Arr  [1]  [2]|  t    i    j |  T    N |  1  
   0   -1    0    0    0    0    0    0    0    6    ## Arr == a
   0    0   -1    0    0    1    0    0    0    1    ## [1] == i+1
   0    0    0   -1    0    0    1    0    0   -1    ## [2] == j-1

READ
3 10 3 3 0 2
# e/i| Arr  [1]  [2]|  t    i    j |  T    N |  1  
   0   -1    0    0    0    0    0    0    0    6    ## Arr == a
   0    0   -1    0    0    1    0    0    0    1    ## [1] == i+1
   0    0    0   -1    0    0    1    0    0    0    ## [2] == j

READ
3 10 3 3 0 2
# e/i| Arr  [1]  [2]|  t    i    j |  T    N |  1  
   0   -1    0    0    0    0    0    0    0    6    ## Arr == a
   0    0   -1    0    0    1    0    0    0    1    ## [1] == i+1
   0    0    0   -1    0    0    1    0    0    1    ## [2] == j+1

# ----------------------------------------------  1.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
3
# List of original iterators
t i j
# Statement body expression
a[i][j] = (a[i-1][j-1] + a[i-1][j] + a[i-1][j+1] + a[i][j-1] + a[i][j] + a[i][j+1] + a[i+1][j-1] + a[i+1][j] + a[i+1][j+1])/9.0;
</body>

# =============================================== Extensions
<scatnames>
b0 t b1 i b2 j b3
</scatnames>

<arrays>
# Number of arrays
6
# Mapping array-identifiers/array-names
1 t
2 T
3 i
4 N
5 j
6 a
</arrays>

<coordinates>
# File name
test2_seidel.src.scop
# Starting line and column
73 0
# Ending line and column
82 0
# Indentation
4
</coordinates>

</OpenScop>

