#!/usr/bin/python                                                                                                                                                                                                                                                              
# -*- coding: utf-8 -*-

# WARN: Should be generated by me and never written down
def matmul(mSize, nSize, kSize, bSize, debug):

        # This shoud not be required since the edit will be in the same file
        from matmul import *

        # Initialize
        a = initialize(mSize, nSize, bSize, True)
        b = initialize(nSize, kSize, bSize, True)
        c = initialize(mSize, kSize, bSize, False)

        # Debug
        if debug:
                print "Matrix A:"
                print a
                print "Matrix B:"
                print b
                print "Matrix C:"
                print c

        # Perform computation
        # c = a*b
        # Start of CLooG code
        if mSize >= 1 and nSize >= 1 and kSize >=1:
                #pragma omp parallel for
                for i in range(mSize):
                        for j in range(kSize):
                                for k in range(nSize):
                                        func(c[i][j], a[i][k], b[k][j])
        from pycompss.api.api import compss_wait_on, compss_barrier
        c = compss_wait_on(c)
        compss_barrier()
        # End of CLooG code

        # Debug
        if debug:
                print "Matrix C:"
                print c

        # Result
        return c

from pycompss.api.task import task
from pycompss.api.parameter import *
@task(c = INOUT)
def func(c, a, b):
        c += a*b

